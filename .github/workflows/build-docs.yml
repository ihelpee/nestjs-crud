name: Build and Deploy Documentation

on:
  push:
    branches:
      - master

# Permiss√µes simplificadas
permissions:
  contents: write

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Install Pandoc
        run: sudo apt-get update && sudo apt-get install -y pandoc

      - name: Create docs/build directory
        run: mkdir -p docs/build

      - name: Generate HTML documentation with styling
        run: |
          # Verificar se existem arquivos markdown
          if [ ! -f "README.md" ] && [ -z "$(find docs -name "*.md" 2>/dev/null)" ]; then
            echo "Nenhum arquivo markdown encontrado!"
            exit 1
          fi
          
          # Gerar HTML simples com CSS incorporado
          pandoc README.md $(find docs -name "*.md" 2>/dev/null | sort) \
            --toc --toc-depth=3 \
            --standalone \
            --metadata title="Documenta√ß√£o do Projeto" \
            --css=https://cdnjs.cloudflare.com/ajax/libs/github-markdown-css/5.2.0/github-markdown-light.min.css \
            -o docs/build/index.html
          
          # Adicionar estilos customizados
          sed -i '/<\/head>/i\
          <style>\
          body { max-width: 980px; margin: 0 auto; padding: 20px; }\
          .markdown-body { box-sizing: border-box; }\
          h1 { border-bottom: 1px solid #eaecef; padding-bottom: 10px; }\
          #TOC { background: #f6f8fa; border: 1px solid #d0d7de; border-radius: 6px; padding: 20px; margin-bottom: 30px; }\
          #TOC ul { margin: 0; }\
          #TOC > ul { padding-left: 0; }\
          #TOC a { text-decoration: none; color: #0969da; }\
          #TOC a:hover { text-decoration: underline; }\
          </style>' docs/build/index.html
          
          # Adicionar classe do GitHub Markdown
          sed -i 's/<body>/<body class="markdown-body">/' docs/build/index.html
          
          # Adicionar t√≠tulo ao TOC se existir
          if grep -q '<div id="TOC">' docs/build/index.html; then
            sed -i 's/<div id="TOC">/<div id="TOC"><h2>üìñ √çndice<\/h2>/' docs/build/index.html
          fi

      - name: Create additional GitHub Pages files
        run: |
          # Criar arquivo de configura√ß√£o do Jekyll (desabilita processamento)
          echo "" > docs/build/.nojekyll
          
          # Criar arquivo README para o GitHub Pages
          cat > docs/build/README.md << 'EOF'
          # Project Documentation
          
          Esta √© a documenta√ß√£o gerada automaticamente do projeto.
          
          ## Acesso
          - [Documenta√ß√£o Completa](./index.html)
          
          ## Como funciona
          Esta documenta√ß√£o √© gerada automaticamente pelo GitHub Actions sempre que h√° um push na branch master.
          EOF

      - name: Deploy to GitHub Pages
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./docs/build
          publish_branch: gh-pages
          force_orphan: true

      - name: Commit generated documentation (backup)
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git add docs/build/
          git commit -m "üìö Update generated documentation [skip ci]" || echo "No changes to commit"
          git push || echo "Push failed, but deployment succeeded"
